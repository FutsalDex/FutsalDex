
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if the user is an administrator
    function isAdmin() {
      // Admins have a 'role' field set to 'admin' in their user document
      return exists(/databases/$(database)/documents/usuarios/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/usuarios/$(request.auth.uid)).data.role == 'admin';
    }

    // Exercises are public to read for everyone, but only admins can write.
    match /ejercicios_futsal/{ejercicioId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // User-specific data
    match /usuarios/{userId} {
      // A user can create, read, update, and delete their own document
      allow read, update, delete: if request.auth.uid == userId;
      allow create: if request.auth.uid == userId;
      
      // An admin can read any user's profile
      allow get: if isAdmin();
      // An admin can list users (for future admin panels)
      allow list: if isAdmin();

      // Subcollection for user favorites
      match /user_favorites/{exerciseId} {
        // A user can manage their own list of favorites
        allow read, write, delete: if request.auth.uid == userId;
      }
    }

    // User-created sessions
    match /mis_sesiones/{sesionId} {
      // A user can read, update, or delete their own sessions.
      // This rule implicitly allows list() queries that include `where("userId", "==", request.auth.uid)`.
      allow read, update, delete: if request.auth.uid == resource.data.userId;

      // A user can create a new session for themselves
      allow create: if request.auth.uid == request.resource.data.userId;

      // An admin can read any session (for support or moderation)
      allow get: if isAdmin();
      allow list: if isAdmin();
    }
  }
}

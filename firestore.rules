rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check if a user is an admin.
    // It safely checks for the existence of the user document and their role.
    function isAdmin() {
      return request.auth != null && exists(/databases/$(database)/documents/usuarios/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/usuarios/$(request.auth.uid)).data.role == 'admin';
    }

    // -- Collection: ejercicios_futsal --
    // Anyone can read exercises. Only admins can write/create/delete them.
    match /ejercicios_futsal/{exerciseId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    // -- Collection: usuarios --
    // A user can read and write their own document in the 'usuarios' collection.
    match /usuarios/{userId} {
       allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // -- Collection: mis_sesiones --
    // A user can perform all operations on their own sessions.
    // Read/update/delete checks the existing document's userId.
    // Create checks the incoming document's userId.
    match /mis_sesiones/{sessionId} {
      allow read, update, delete: if request.auth != null && request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
    }
    
    // -- Subcollection: user_favorites --
    // A user can manage their own list of favorites.
    match /usuarios/{userId}/user_favorites/{exerciseId} {
      allow read, write, delete: if request.auth != null && request.auth.uid == userId;
    }
  }
}


rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper function to check for admin role
    function isAdmin() {
      return exists(/databases/$(database)/documents/usuarios/$(request.auth.uid)) && 
             get(/databases/$(database)/documents/usuarios/$(request.auth.uid)).data.role == 'admin';
    }

    // Main exercise library: 'ejercicios_futsal'
    match /ejercicios_futsal/{exerciseId} {
      // Anyone can read exercises marked as visible.
      // Admins can read all exercises regardless of visibility.
      allow read: if resource.data.isVisible == true || (request.auth != null && isAdmin());
      
      // Only admins can create, update, or delete exercises.
      allow write: if request.auth != null && isAdmin();
    }

    // User-specific data collections
    match /usuarios/{userId} {
      // A user can read their own document. An admin can read any user's document.
      allow read: if request.auth.uid == userId || isAdmin();
      
      // A user can create their own document (e.g., on registration).
      // They cannot assign themselves the admin role.
      allow create: if request.auth.uid == userId && request.resource.data.role != 'admin';
      
      // An admin can update any user document.
      // A user can update their own document, but CANNOT change their role.
      allow update: if (request.auth.uid == userId && request.resource.data.role == resource.data.role) || isAdmin();
      
      // Only admins can delete user accounts.
      allow delete: if isAdmin();

      // Sub-collection for user's favorite exercises
      match /user_favorites/{favoriteId} {
        // A user can only access their own favorites sub-collection.
        allow read, write, delete: if request.auth.uid == userId;
      }
    }
    
    // User's saved sessions
    match /mis_sesiones/{sessionId} {
      // On create, ensure the session is being created for the logged-in user.
      allow create: if request.auth.uid == request.resource.data.userId;
      
      // Allow read, update, delete only if the document's userId matches the logged-in user.
      allow read, update, delete: if request.auth.uid == resource.data.userId;
    }
    
    // User's match statistics
    match /partidos_estadisticas/{matchId} {
      // On create, ensure the stats are being created for the logged-in user.
      allow create: if request.auth.uid == request.resource.data.userId;

      // Allow read, update, delete only if the document's userId matches the logged-in user.
      allow read, update, delete: if request.auth.uid == resource.data.userId;
    }
  }
}
